version: "3"

services:

  application:
    # container_name: application
    build:
      context: ./etc/application
      dockerfile: Dockerfile
      args:
        WWWUSER: '${WWWUSER}'
        WWWGROUP: '${WWWGROUP}'
    image: application/php-8.2
    restart: '${DOCKER_CONTAINER_RESTART}'
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    environment:
      WWWUSER: '${WWWUSER}'
      WWWGROUP: '${WWWGROUP}'
      XDEBUG_MODE: '${APP_XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${APP_XDEBUG_CONFIG:-client_host=host.docker.internal}'
      IGNITION_LOCAL_SITES_PATH: '${PWD}'
    volumes:
      - '${APP_DIR_ROOT:-./application}:/var/www'
      - './etc/php/8.2/php.ini:/usr/local/etc/php/conf.d/local.ini:ro'
    networks:
      - application-network
    depends_on:
      - db_common
      - db_product
      - redis
      - rabbitmq

  db_common:
    # container_name: db_common
    image: 'mariadb:${MARIADB_VERSION:-11}'
    restart: '${DOCKER_CONTAINER_RESTART}'
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    environment:
      MARIADB_ROOT_PASSWORD: '${MARIADB_PASSWORD}'
      MARIADB_ROOT_HOST: "127.0.0.1"
      MARIADB_DATABASE: '${MARIADB_DATABASE_COMMON:-default_base}'
      MARIADB_USER: '${MARIADB_USERNAME:-user}'
      MARIADB_PASSWORD: '${MARIADB_PASSWORD:-secret}'
    ports:
      - '${MARIADB_FORWARD_PORT_COMMON:-38081}:3806'
    volumes:
       - './var/db-common:/var/lib/mysql'
    networks:
      - application-network
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - '-p${MARIADB_PASSWORD}'
      retries: 3
      timeout: 5s

  db_product:
    # container_name: db_product
    image: 'mariadb:${MARIADB_VERSION:-11}'
    restart: '${DOCKER_CONTAINER_RESTART}'
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    environment:
      MARIADB_ROOT_PASSWORD: '${MARIADB_PASSWORD}'
      MARIADB_ROOT_HOST: "127.0.0.1"
      MARIADB_DATABASE: '${MARIADB_DATABASE_PRODUCT:-default_base}'
      MARIADB_USER: '${MARIADB_USERNAME:-user}'
      MARIADB_PASSWORD: '${MARIADB_PASSWORD:-secret}'
      MARIADB_ALLOW_EMPTY_PASSWORD: 1
    ports:
      - '${MARIADB_FORWARD_PORT_PRODUCT:-38082}:3806'
    volumes:
       - './var/db-product:/var/lib/mysql'
    networks:
      - application-network
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - '-p${MARIADB_PASSWORD}'
      retries: 3
      timeout: 5s

  redis:
    # container_name: redis
    image: 'redis:${REDIS_VERSION:-7.2}'
    # ports:
    #   - '${REDIS_FORWARD_PORT:-6379}:6379'
    volumes:
      - './var/redis:/data'
    networks:
      - application-network
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      retries: 3
      timeout: 5s

  rabbitmq:
    # container_name: rabbitmq
    image: 'rabbitmq:${RABBITMQ_VERSION:-3.12}'
    hostname: rabbitmq
    restart: '${DOCKER_CONTAINER_RESTART}'
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    environment:
      RABBITMQ_DEFAULT_USER: '${RABBITMQ_USERNAME:-user}'
      RABBITMQ_DEFAULT_PASS: '${RABBITMQ_PASSWORD:-secret}'
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: '-rabbit log_levels [{connection,error},{default,error}] disk_free_limit ${RABBITMQ_DISK_FREE_LIMIT:-2147483648}'
    ports:
      - '${RABBITMQ_MANAGEMENT_PORT:-15672}:15672'
      # - '${RABBITMQ_FORWARD_PORT:-5672}:5672'
    volumes:
      - './var/rabbitmq:/var/lib/rabbitmq/mnesia/rabbit@rabbitmq'
    networks:
      - application-network

  #Nginx Service
  frontend:
    # container_name: frontend
    image: 'nginx:${NGINX_VERSION:-1.25}'
    restart: '${DOCKER_CONTAINER_RESTART}'
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '${APP_PORT:-80}:80'
      - '${APP_PORT_SSL:-443}:443'
    volumes:
      - './etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
      - './etc/nginx/ssl:/etc/nginx/ssl:ro'
      - '${APP_DIR_ROOT:-./application}/public:/var/www/public'
      - './log/nginx:/var/log/nginx'
    networks:
      - application-network
    depends_on:
      - application

  # admin panel for mariadb
  adminer:
    # container_name: adminer
    image: adminer
    restart: '${DOCKER_CONTAINER_RESTART}'
    ports:
      - '${ADMINER_PORT:-8080}:8080'
    networks:
      - application-network
    depends_on:
      - db_common
      - db_product

#Docker Networks
networks:
  application-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: '${APP_NETWORK_BRIDGE_NAME}'

